<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>The input grade should be authorized by the teaching staff.
Any dishonesty will lead to serious consequence!

Academic dishonesty will lead to disciplinary action with penalties 
that can include expulsion from the University and debarment 
from re-admission for the most serious infractions 
(See the CityU Rules on Academic Honesty for a full list of possible
 penalties, as well as the disciplinary procedure to be followed 
in cases of academic dishonesty).</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAMAgIEIgAA
        AzAAAQQyAwIBKgYFABgBAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAABAYF
        TVQEBYPHBAOY7wEBn/kBAZ/5BASS9QYFd+UFBEe9BQMnfAkDAzwIAAAIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAA4GBBRkBAE4kwEC
        PJMGBByRAgMAbAICADwAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATF9YEBwT1nwEA/P8BAPz/AwPo/wUF
        TIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgnsIgQE
        +dkAAfz/AAD+/wQFoakAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA0I7zQFBfnjAwL9/wgH6G4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATFeEKCwryKBkR5gQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///wH//wAA8f/+AD//AADAH/x4D/8AAIAH
        /B4H/wAAn4H8HwP/AAAf8Pwfgf8AAB/4PB/A/wAAD/4eH+B/AAAP/4f/8H8AAIf/w//4PwAAh//x//g/
        AACD//h//B8AAMH//D/8HwAAwP//H/4fAADg//+P/h8AAOB//8f/DwAA8D//4/8PAAD4H//w/w8AAPgP
        //x/jwAA/Af//j+PAAD+A///H48AAP8B/w+PjwAA/4D+B8ePAAD/wD4D488AAP/wHwPxzwAA//gHw/hP
        AAD//gPz/A8AAP//gGP+DwAA///gB/+PAAD///gP/8cAAP//////wwAA///////hAAD//////+AAAP//
        ////8AAA///////5AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>